name: iOS Build & Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      deploy_to_testflight:
        description: 'Deploy to TestFlight'
        required: true
        default: 'false'
        type: boolean

jobs:
  build-ios:
    name: Build iOS App
    runs-on: macos-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build web app
      run: npm run build

    - name: Setup Capacitor
      run: |
        npm install -g @capacitor/cli
        npx cap sync ios

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Setup provisioning profile
      env:
        PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE }}
        CERTIFICATE_BASE64: ${{ secrets.IOS_CERTIFICATE }}
        CERTIFICATE_PASSWORD: ${{ secrets.IOS_CERTIFICATE_PASSWORD }}
      run: |
        # Create the provisioning profile
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
        echo -n "$PROVISIONING_PROFILE_BASE64" | base64 --decode --output $PP_PATH
        
        # Create the certificate
        CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
        echo -n "$CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
        
        # Create a custom keychain
        KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db
        security create-keychain -p "" $KEYCHAIN_PATH
        security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
        security unlock-keychain -p "" $KEYCHAIN_PATH
        
        # Import certificate to keychain
        security import $CERTIFICATE_PATH -P "$CERTIFICATE_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
        security list-keychain -d user -s $KEYCHAIN_PATH
        
        # Install the provisioning profile
        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Build iOS app
      working-directory: ios/App
      run: |
        xcodebuild -workspace App.xcworkspace \
          -scheme App \
          -sdk iphoneos \
          -configuration Release \
          -archivePath $RUNNER_TEMP/LocalNotes.xcarchive \
          archive

    - name: Export IPA
      run: |
        EXPORT_OPTS_PATH=$RUNNER_TEMP/ExportOptions.plist
        echo '<?xml version="1.0" encoding="UTF-8"?>
        <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
        <plist version="1.0">
        <dict>
          <key>method</key>
          <string>app-store</string>
          <key>teamID</key>
          <string>${{ secrets.IOS_TEAM_ID }}</string>
        </dict>
        </plist>' > $EXPORT_OPTS_PATH
        
        xcodebuild -exportArchive \
          -archivePath $RUNNER_TEMP/LocalNotes.xcarchive \
          -exportOptionsPlist $EXPORT_OPTS_PATH \
          -exportPath $RUNNER_TEMP/

    - name: Upload to TestFlight
      if: ${{ github.event.inputs.deploy_to_testflight == 'true' || startsWith(github.ref, 'refs/tags/') }}
      env:
        APP_STORE_CONNECT_USERNAME: ${{ secrets.APP_STORE_CONNECT_USERNAME }}
        APP_STORE_CONNECT_PASSWORD: ${{ secrets.APP_STORE_CONNECT_PASSWORD }}
      run: |
        xcrun altool --upload-app \
          --type ios \
          --file "$RUNNER_TEMP/Local-Notes.ipa" \
          --username "$APP_STORE_CONNECT_USERNAME" \
          --password "$APP_STORE_CONNECT_PASSWORD"

    - name: Upload IPA artifact
      uses: actions/upload-artifact@v4
      with:
        name: ios-app
        path: ${{ runner.temp }}/Local-Notes.ipa
        retention-days: 30